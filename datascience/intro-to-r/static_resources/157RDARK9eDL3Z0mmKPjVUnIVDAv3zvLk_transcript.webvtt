WEBVTT

00:00:00.000 --> 00:00:10.922 align:middle line:84%
[SQUEAKING]
[RUSTLING] [CLICKING]

00:00:10.922 --> 00:00:11.880 align:middle line:90%
HELENA VAILLICROSA: OK.

00:00:11.880 --> 00:00:15.480 align:middle line:84%
So now, we're just going
to jump directly into how

00:00:15.480 --> 00:00:18.330 align:middle line:90%
to use R for statistics.

00:00:18.330 --> 00:00:20.310 align:middle line:84%
I'm going to make a
very quick tutorial

00:00:20.310 --> 00:00:23.910 align:middle line:84%
about how to apply linear
models into the data, also

00:00:23.910 --> 00:00:27.340 align:middle line:84%
general linear models
and mixed models.

00:00:27.340 --> 00:00:30.900 align:middle line:84%
I'm not going to cover the
mathematical principles of that.

00:00:30.900 --> 00:00:36.070 align:middle line:84%
I'm just going to show you how
to apply those models with code.

00:00:36.070 --> 00:00:39.840 align:middle line:84%
So first of all, I'm
just going to start over

00:00:39.840 --> 00:00:42.660 align:middle line:84%
with all the objects here,
just cleaning a little bit,

00:00:42.660 --> 00:00:46.530 align:middle line:90%
so it's not distracting us.

00:00:46.530 --> 00:00:49.770 align:middle line:84%
It's just going to charge again
the database we've been working

00:00:49.770 --> 00:00:52.240 align:middle line:84%
with based on nitrogen,
and phosphorus,

00:00:52.240 --> 00:00:54.780 align:middle line:84%
and potassium
fertilization in yields.

00:00:54.780 --> 00:00:57.720 align:middle line:90%
Oops, sorry.

00:00:57.720 --> 00:00:58.260 align:middle line:90%
OK.

00:00:58.260 --> 00:01:04.200 align:middle line:84%
So this is how the structure of
a linear model should look like.

00:01:04.200 --> 00:01:08.010 align:middle line:84%
First of all, we create the name
of the model, model number 1.

00:01:08.010 --> 00:01:12.050 align:middle line:84%
We assign all of these
into model number 1--

00:01:12.050 --> 00:01:14.060 align:middle line:90%
LM, which is linear model.

00:01:14.060 --> 00:01:17.950 align:middle line:84%
And here, we're going to have
our dependent variable, the y,

00:01:17.950 --> 00:01:19.840 align:middle line:90%
which is the yield.

00:01:19.840 --> 00:01:23.380 align:middle line:84%
Just to remind you again
what the database is about,

00:01:23.380 --> 00:01:26.050 align:middle line:84%
here we have how
much yield has been

00:01:26.050 --> 00:01:29.500 align:middle line:84%
produced after the different
treatments of fertilization.

00:01:29.500 --> 00:01:31.390 align:middle line:84%
And we have the
different experiments

00:01:31.390 --> 00:01:32.455 align:middle line:90%
set in different blocks.

00:01:32.455 --> 00:01:34.990 align:middle line:90%


00:01:34.990 --> 00:01:36.280 align:middle line:90%
And we are going to--

00:01:36.280 --> 00:01:39.760 align:middle line:84%
just to separate the dependent
and independent variables,

00:01:39.760 --> 00:01:41.540 align:middle line:90%
we put this sign in here.

00:01:41.540 --> 00:01:46.330 align:middle line:84%
And then these are the different
variables we want to explore,

00:01:46.330 --> 00:01:49.030 align:middle line:90%
comma, and then data.

00:01:49.030 --> 00:01:53.830 align:middle line:84%
We assign the data we want
to explore, which is the NPK.

00:01:53.830 --> 00:01:56.240 align:middle line:90%
So let's just run this.

00:01:56.240 --> 00:02:03.590 align:middle line:84%
And if we see what we
have in the object,

00:02:03.590 --> 00:02:06.860 align:middle line:84%
this is what we're going to see,
which is not very informative.

00:02:06.860 --> 00:02:10.900 align:middle line:84%
So what we need is to go to
the summary of that model.

00:02:10.900 --> 00:02:13.300 align:middle line:84%
That's going to provide
us with the information

00:02:13.300 --> 00:02:17.240 align:middle line:84%
that we would need to understand
what's going on in the model.

00:02:17.240 --> 00:02:19.643 align:middle line:90%
So just click on Summary M1.

00:02:19.643 --> 00:02:21.310 align:middle line:84%
And here, what we're
going to see-- just

00:02:21.310 --> 00:02:25.120 align:middle line:84%
make it bigger so
you see properly.

00:02:25.120 --> 00:02:29.150 align:middle line:84%
First of all, it's going
to display the formula--

00:02:29.150 --> 00:02:32.500 align:middle line:84%
so what's the question that
we've asked to the computer.

00:02:32.500 --> 00:02:35.830 align:middle line:84%
Then we're going to have the
distribution of the residuals.

00:02:35.830 --> 00:02:38.690 align:middle line:84%
And here, it goes
the interesting part,

00:02:38.690 --> 00:02:41.420 align:middle line:90%
which is the coefficients.

00:02:41.420 --> 00:02:44.590 align:middle line:84%
This is the intercept, and
then the different effects

00:02:44.590 --> 00:02:47.150 align:middle line:84%
of the different variables--
nitrogen, phosphorus,

00:02:47.150 --> 00:02:47.930 align:middle line:90%
and potassium.

00:02:47.930 --> 00:02:51.730 align:middle line:84%
So when these are 1, so
when there is fertilization,

00:02:51.730 --> 00:02:53.920 align:middle line:84%
we see that there
is an increase,

00:02:53.920 --> 00:02:58.570 align:middle line:84%
because it's a positive
value, into the baseline.

00:02:58.570 --> 00:03:00.610 align:middle line:84%
With phosphorus,
there's a decrease.

00:03:00.610 --> 00:03:02.600 align:middle line:84%
And with potassium,
there's a decrease as well.

00:03:02.600 --> 00:03:05.890 align:middle line:84%
And just to see if those
different treatments are

00:03:05.890 --> 00:03:10.900 align:middle line:84%
significant or not, based
on 0.05 for your value,

00:03:10.900 --> 00:03:14.050 align:middle line:90%
we have the different--

00:03:14.050 --> 00:03:15.460 align:middle line:90%
the p values here.

00:03:15.460 --> 00:03:19.280 align:middle line:84%
And when whatever
is significant,

00:03:19.280 --> 00:03:21.820 align:middle line:90%
we have one asterisk.

00:03:21.820 --> 00:03:24.670 align:middle line:84%
If it is very significant,
we have three.

00:03:24.670 --> 00:03:27.560 align:middle line:84%
And if it's marginal,
we have this dot here.

00:03:27.560 --> 00:03:29.560 align:middle line:84%
And if there's nothing,
it means that it's not

00:03:29.560 --> 00:03:31.720 align:middle line:90%
significant enough.

00:03:31.720 --> 00:03:37.110 align:middle line:84%
Also some interesting features
is the adjusted R squared.

00:03:37.110 --> 00:03:41.560 align:middle line:84%
Just as a reminder, the R
square goes between 0 and 1.

00:03:41.560 --> 00:03:46.990 align:middle line:84%
In this case, it will
be 0.23, or like 23%.

00:03:46.990 --> 00:03:49.690 align:middle line:84%
And also, the p-value
of the whole model

00:03:49.690 --> 00:03:52.225 align:middle line:90%
is displayed right here.

00:03:52.225 --> 00:03:56.340 align:middle line:90%
I'll just put this back.

00:03:56.340 --> 00:03:58.180 align:middle line:84%
Something that's
also very useful

00:03:58.180 --> 00:04:00.110 align:middle line:84%
is to explore how
the residuals look

00:04:00.110 --> 00:04:03.020 align:middle line:84%
like to see if we have an
appropriate distribution

00:04:03.020 --> 00:04:07.140 align:middle line:84%
of the residuals, if it
follows a normal distribution.

00:04:07.140 --> 00:04:13.910 align:middle line:84%
So I create a histogram of
the residuals of the model 1.

00:04:13.910 --> 00:04:16.790 align:middle line:84%
So that stands for
residuals comma.

00:04:16.790 --> 00:04:19.040 align:middle line:84%
And previously, I
mentioned that you

00:04:19.040 --> 00:04:21.589 align:middle line:84%
can change the number
of bars that are

00:04:21.589 --> 00:04:23.630 align:middle line:90%
displayed in your histogram.

00:04:23.630 --> 00:04:27.360 align:middle line:90%
In this case, I want 10.

00:04:27.360 --> 00:04:28.440 align:middle line:90%
Here it is.

00:04:28.440 --> 00:04:31.260 align:middle line:90%
I could shorten that number.

00:04:31.260 --> 00:04:37.580 align:middle line:84%
And now, you will see that I
have less bars and so forth.

00:04:37.580 --> 00:04:40.340 align:middle line:84%
Something else you
could do is a box plot.

00:04:40.340 --> 00:04:44.190 align:middle line:84%
I want to see what happens
when I fertilize with nitrogen.

00:04:44.190 --> 00:04:48.170 align:middle line:84%
So I can create a box
plot just like that.

00:04:48.170 --> 00:04:50.750 align:middle line:84%
Yield and nitrogen--
so I'm just going

00:04:50.750 --> 00:04:52.350 align:middle line:90%
to focus on nitrogen right now.

00:04:52.350 --> 00:04:56.550 align:middle line:84%
And again, the data that we want
to explore, so just click on it,

00:04:56.550 --> 00:05:01.280 align:middle line:84%
and we see that the ones that
are not fertilized are lower

00:05:01.280 --> 00:05:05.810 align:middle line:84%
and the ones that are
fertilized have higher yield.

00:05:05.810 --> 00:05:08.510 align:middle line:90%


00:05:08.510 --> 00:05:12.620 align:middle line:84%
And we can save
that summary that we

00:05:12.620 --> 00:05:17.400 align:middle line:84%
created because it's where
all the important data lives.

00:05:17.400 --> 00:05:20.160 align:middle line:84%
So we have here this
result right here.

00:05:20.160 --> 00:05:21.860 align:middle line:84%
So we can consult
the different parts

00:05:21.860 --> 00:05:26.060 align:middle line:90%
that we just consulted before.

00:05:26.060 --> 00:05:27.800 align:middle line:84%
So everything is
stored right here.

00:05:27.800 --> 00:05:30.530 align:middle line:84%
And we could even
call individually

00:05:30.530 --> 00:05:34.020 align:middle line:84%
the ones that-- let's say I just
want to store the coefficients.

00:05:34.020 --> 00:05:37.190 align:middle line:84%
So I'll go to sum,
like the dollar.

00:05:37.190 --> 00:05:40.080 align:middle line:90%
And I'll go to coefficients.

00:05:40.080 --> 00:05:45.247 align:middle line:84%
And here, I'm just going to
see the coefficients, which

00:05:45.247 --> 00:05:46.205 align:middle line:90%
are the same as before.

00:05:46.205 --> 00:05:51.280 align:middle line:90%


00:05:51.280 --> 00:05:52.150 align:middle line:90%
OK.

00:05:52.150 --> 00:05:56.710 align:middle line:84%
Now, it's the turn of the GLM,
the generalized linear models.

00:05:56.710 --> 00:06:00.700 align:middle line:84%
They are quite similar
to linear models.

00:06:00.700 --> 00:06:02.980 align:middle line:84%
But one of the
advantages with GLMs

00:06:02.980 --> 00:06:05.920 align:middle line:84%
is that we can provide a
distribution of the data,

00:06:05.920 --> 00:06:09.290 align:middle line:84%
in case the data
wouldn't be normal.

00:06:09.290 --> 00:06:12.580 align:middle line:84%
We could apply
family links, like so

00:06:12.580 --> 00:06:16.160 align:middle line:84%
to say if we want to have
a gamma distribution,

00:06:16.160 --> 00:06:18.530 align:middle line:84%
then we can add
that to the model,

00:06:18.530 --> 00:06:20.605 align:middle line:84%
so we don't have
normal problems.

00:06:20.605 --> 00:06:23.120 align:middle line:90%


00:06:23.120 --> 00:06:26.100 align:middle line:84%
And so with the
structure, as you can see,

00:06:26.100 --> 00:06:27.850 align:middle line:84%
it's mostly the same
as the linear models,

00:06:27.850 --> 00:06:33.790 align:middle line:84%
just that we add that as
a GLM, same y variable

00:06:33.790 --> 00:06:36.790 align:middle line:84%
and function of these
different x variables,

00:06:36.790 --> 00:06:38.650 align:middle line:90%
just go for the same.

00:06:38.650 --> 00:06:41.250 align:middle line:90%


00:06:41.250 --> 00:06:43.980 align:middle line:84%
If we wanted to apply
the family, just--

00:06:43.980 --> 00:06:46.560 align:middle line:84%
oh, let's just go back
to the Help thing,

00:06:46.560 --> 00:06:51.070 align:middle line:90%
just see how GLM works.

00:06:51.070 --> 00:06:55.410 align:middle line:84%
You see here, it contemplates
the possibility of add a family.

00:06:55.410 --> 00:06:57.690 align:middle line:84%
In this case, by
default, it's Gaussian.

00:06:57.690 --> 00:07:00.180 align:middle line:84%
So whatever you
see here initially

00:07:00.180 --> 00:07:03.180 align:middle line:84%
is what is displayed
by default. But if you

00:07:03.180 --> 00:07:05.530 align:middle line:84%
wanted to change this
Gaussian to something else,

00:07:05.530 --> 00:07:07.318 align:middle line:90%
then you could do it.

00:07:07.318 --> 00:07:09.360 align:middle line:84%
So if you scroll down,
you'll see the information

00:07:09.360 --> 00:07:10.450 align:middle line:90%
about the family.

00:07:10.450 --> 00:07:13.470 align:middle line:84%
And if you click on
Family for Details,

00:07:13.470 --> 00:07:16.590 align:middle line:84%
here you see the different
possibilities you have.

00:07:16.590 --> 00:07:21.420 align:middle line:84%
So if you want to apply a
binomial distribution, gamma,

00:07:21.420 --> 00:07:25.450 align:middle line:84%
and so forth, this is what you
should include in your model.

00:07:25.450 --> 00:07:30.850 align:middle line:84%
So I'm just going to copy
that command, go right here.

00:07:30.850 --> 00:07:31.350 align:middle line:90%
Let's see.

00:07:31.350 --> 00:07:34.560 align:middle line:90%
That's the function I want.

00:07:34.560 --> 00:07:41.270 align:middle line:84%
I have to put family
first and go ahead.

00:07:41.270 --> 00:07:46.593 align:middle line:84%
And now, it follows
my gamma distribution.

00:07:46.593 --> 00:07:48.760 align:middle line:84%
I'm not saying that's
mathematically correct or not.

00:07:48.760 --> 00:07:51.340 align:middle line:84%
I'm just focusing on
the commands for you

00:07:51.340 --> 00:07:55.100 align:middle line:84%
to be able to do
it in your code.

00:07:55.100 --> 00:07:55.600 align:middle line:90%
OK.

00:07:55.600 --> 00:07:57.310 align:middle line:84%
So now that we've
reached this point,

00:07:57.310 --> 00:08:01.070 align:middle line:84%
I'll challenge you with this
exercise, asking the question,

00:08:01.070 --> 00:08:04.960 align:middle line:84%
are there any differences
in yield due to its block?

00:08:04.960 --> 00:08:05.710 align:middle line:90%
What is the block?

00:08:05.710 --> 00:08:08.620 align:middle line:84%
Just a quick reminder,
that's the block.

00:08:08.620 --> 00:08:12.230 align:middle line:90%


00:08:12.230 --> 00:08:15.620 align:middle line:84%
So you can answer the
question both using

00:08:15.620 --> 00:08:19.190 align:middle line:84%
linear model or generalized
linear model, up to you.

00:08:19.190 --> 00:08:24.410 align:middle line:90%


00:08:24.410 --> 00:08:28.260 align:middle line:84%
All right, let's just
answer the exercise.

00:08:28.260 --> 00:08:30.480 align:middle line:84%
To do so, I'm just
going to create a model.

00:08:30.480 --> 00:08:34.559 align:middle line:90%
It's going to be called M2.

00:08:34.559 --> 00:08:36.380 align:middle line:90%
And the question we had--

00:08:36.380 --> 00:08:38.450 align:middle line:84%
I'm going to use linear
model to answer that.

00:08:38.450 --> 00:08:42.470 align:middle line:84%
The question was, are there
any differences in yield

00:08:42.470 --> 00:08:43.549 align:middle line:90%
due to its block?

00:08:43.549 --> 00:08:51.500 align:middle line:84%
So let's just see
yield as a variable.

00:08:51.500 --> 00:08:53.300 align:middle line:90%
That's a y variable.

00:08:53.300 --> 00:08:57.995 align:middle line:84%
And we want to see if there's
any difference due to block.

00:08:57.995 --> 00:09:00.980 align:middle line:90%


00:09:00.980 --> 00:09:05.300 align:middle line:90%
And then data, it's NPK.

00:09:05.300 --> 00:09:07.940 align:middle line:90%


00:09:07.940 --> 00:09:11.820 align:middle line:90%
And that should work.

00:09:11.820 --> 00:09:14.690 align:middle line:84%
Let's see what we
have in the model.

00:09:14.690 --> 00:09:16.412 align:middle line:84%
Again, I remind
you that Summary is

00:09:16.412 --> 00:09:17.870 align:middle line:84%
where we want to
go in order to see

00:09:17.870 --> 00:09:20.710 align:middle line:90%
what's going on in the model.

00:09:20.710 --> 00:09:22.450 align:middle line:90%
OK.

00:09:22.450 --> 00:09:24.400 align:middle line:90%
Let's see.

00:09:24.400 --> 00:09:27.610 align:middle line:90%
Well, I'd say, not really.

00:09:27.610 --> 00:09:30.310 align:middle line:84%
We don't have a lot
of significance here.

00:09:30.310 --> 00:09:33.040 align:middle line:84%
There's only one that's
marginally significant.

00:09:33.040 --> 00:09:35.230 align:middle line:84%
This block number 3
might be a little bit

00:09:35.230 --> 00:09:38.560 align:middle line:90%
different than the other blocks.

00:09:38.560 --> 00:09:43.190 align:middle line:84%
The p-value of the whole
model is not very good.

00:09:43.190 --> 00:09:46.180 align:middle line:84%
So I would say
that we don't have

00:09:46.180 --> 00:09:51.280 align:middle line:90%
differences due to the block.

00:09:51.280 --> 00:09:55.530 align:middle line:90%


00:09:55.530 --> 00:09:56.030 align:middle line:90%
OK.

00:09:56.030 --> 00:09:59.840 align:middle line:84%
So before moving forward
to the mixed models,

00:09:59.840 --> 00:10:01.910 align:middle line:84%
I would like to introduce
them a little bit,

00:10:01.910 --> 00:10:05.340 align:middle line:84%
just to go through
why are they important

00:10:05.340 --> 00:10:08.760 align:middle line:84%
and how can we benefit
from linear mixed models.

00:10:08.760 --> 00:10:11.370 align:middle line:84%
So let's imagine that we are
working in our experiment.

00:10:11.370 --> 00:10:14.180 align:middle line:84%
In this case, we are
applying the experiment

00:10:14.180 --> 00:10:17.510 align:middle line:84%
that we have in the
database, the NPK database.

00:10:17.510 --> 00:10:21.300 align:middle line:84%
There are distributions
based on blocks.

00:10:21.300 --> 00:10:22.680 align:middle line:90%
So what are those blocks?

00:10:22.680 --> 00:10:25.590 align:middle line:84%
So let's just imagine that
this is our working space.

00:10:25.590 --> 00:10:26.610 align:middle line:90%
This is our lab.

00:10:26.610 --> 00:10:29.790 align:middle line:84%
This is where we are
performing our experiments.

00:10:29.790 --> 00:10:31.670 align:middle line:84%
But just because the
distribution of the lab

00:10:31.670 --> 00:10:35.690 align:middle line:84%
is like this, we have one
side where there are windows,

00:10:35.690 --> 00:10:39.390 align:middle line:84%
so where the sun could
get into our experiment.

00:10:39.390 --> 00:10:41.690 align:middle line:84%
And there is the
other side of the lab

00:10:41.690 --> 00:10:43.640 align:middle line:90%
where there's no windows.

00:10:43.640 --> 00:10:47.120 align:middle line:84%
So I would anticipate at the
beginning that maybe the plants

00:10:47.120 --> 00:10:49.700 align:middle line:84%
that have more light-- so
the ones that are closer

00:10:49.700 --> 00:10:51.230 align:middle line:90%
to the window--

00:10:51.230 --> 00:10:52.160 align:middle line:90%
might grow more.

00:10:52.160 --> 00:10:53.690 align:middle line:84%
But this is something
that I'm not

00:10:53.690 --> 00:10:56.320 align:middle line:84%
interested in exploring
in my experiment.

00:10:56.320 --> 00:10:59.100 align:middle line:84%
So to do that, that's
where I introduce blocks.

00:10:59.100 --> 00:11:02.160 align:middle line:84%
So I would record
each of these plants

00:11:02.160 --> 00:11:04.240 align:middle line:84%
that I'm growing into
a different block.

00:11:04.240 --> 00:11:06.360 align:middle line:84%
So in this case, I
would have three blocks.

00:11:06.360 --> 00:11:10.380 align:middle line:84%
And these are distributed
based on how close they

00:11:10.380 --> 00:11:11.580 align:middle line:90%
are from the windows.

00:11:11.580 --> 00:11:16.180 align:middle line:84%
So this applies also into
other sort of environments.

00:11:16.180 --> 00:11:18.880 align:middle line:84%
So if we move to
this other design,

00:11:18.880 --> 00:11:23.320 align:middle line:84%
we see that this could apply
in when you go to the field.

00:11:23.320 --> 00:11:24.660 align:middle line:90%
That represents a forest.

00:11:24.660 --> 00:11:26.820 align:middle line:84%
If you have a forest
in the top of the hill,

00:11:26.820 --> 00:11:28.650 align:middle line:84%
that might be
differently affected

00:11:28.650 --> 00:11:31.380 align:middle line:84%
by the forest that's in
the bottom of the hill.

00:11:31.380 --> 00:11:33.570 align:middle line:90%
So this could be block number 1.

00:11:33.570 --> 00:11:35.640 align:middle line:84%
And this could be
block number 2.

00:11:35.640 --> 00:11:38.558 align:middle line:84%
And we could use
blocks for everything

00:11:38.558 --> 00:11:39.600 align:middle line:90%
that comes into our mind.

00:11:39.600 --> 00:11:41.850 align:middle line:84%
Let's say that we are
exploring a variable

00:11:41.850 --> 00:11:47.880 align:middle line:84%
and we assume that if our
water river is close to a city

00:11:47.880 --> 00:11:49.880 align:middle line:84%
or it's far from a city,
that could be important

00:11:49.880 --> 00:11:52.150 align:middle line:84%
and that could affect
our experiment.

00:11:52.150 --> 00:11:55.800 align:middle line:84%
So here is where we think
about using linear mixed models

00:11:55.800 --> 00:12:01.650 align:middle line:84%
to take away the error or
take away the variability that

00:12:01.650 --> 00:12:05.500 align:middle line:84%
could come from things that
are outside of our control.

00:12:05.500 --> 00:12:09.510 align:middle line:84%
So we don't have any interest
in studying the differences

00:12:09.510 --> 00:12:10.800 align:middle line:90%
in top and bottom of the hill.

00:12:10.800 --> 00:12:12.990 align:middle line:84%
And we don't have any
interest in studying

00:12:12.990 --> 00:12:14.730 align:middle line:84%
the differences
between the plants that

00:12:14.730 --> 00:12:18.180 align:middle line:84%
are close to the window and the
ones that are out of the window.

00:12:18.180 --> 00:12:20.790 align:middle line:84%
So linear mixed
models are a good way

00:12:20.790 --> 00:12:24.330 align:middle line:84%
to get rid of that
variability and just

00:12:24.330 --> 00:12:27.270 align:middle line:84%
put the emphasis
on the experiment

00:12:27.270 --> 00:12:28.605 align:middle line:90%
that we are currently running.

00:12:28.605 --> 00:12:32.540 align:middle line:90%


00:12:32.540 --> 00:12:36.710 align:middle line:84%
After the quick explanation
about the linear mixed models,

00:12:36.710 --> 00:12:40.550 align:middle line:84%
let's just go ahead
with the code again.

00:12:40.550 --> 00:12:43.440 align:middle line:84%
I'm just going to
get rid of this

00:12:43.440 --> 00:12:47.580 align:middle line:90%
because it might be distracting.

00:12:47.580 --> 00:12:51.320 align:middle line:84%
So linear models and
generalized linear models

00:12:51.320 --> 00:12:53.660 align:middle line:90%
are included in the R functions.

00:12:53.660 --> 00:12:58.490 align:middle line:84%
But for mixed models, we
have to install and charge

00:12:58.490 --> 00:13:00.380 align:middle line:90%
extra packages.

00:13:00.380 --> 00:13:05.540 align:middle line:84%
In this case, I'm going to
use the NLME package and also

00:13:05.540 --> 00:13:07.190 align:middle line:90%
the lmerTest.

00:13:07.190 --> 00:13:09.380 align:middle line:84%
So I already have
them installed.

00:13:09.380 --> 00:13:14.210 align:middle line:84%
But feel free to install
them first, and then

00:13:14.210 --> 00:13:17.280 align:middle line:90%
charge them in your session.

00:13:17.280 --> 00:13:22.220 align:middle line:84%
In this case, instead of
LM or GLM, we have the LME.

00:13:22.220 --> 00:13:23.930 align:middle line:90%
This is a linear mixed model.

00:13:23.930 --> 00:13:28.550 align:middle line:84%
And our variable is
still the yield-- so

00:13:28.550 --> 00:13:31.920 align:middle line:84%
how much yield is produced after
the fertilization of nitrogen,

00:13:31.920 --> 00:13:33.170 align:middle line:90%
phosphorus, and potassium.

00:13:33.170 --> 00:13:37.970 align:middle line:84%
But now, we are adding
this random factor.

00:13:37.970 --> 00:13:41.150 align:middle line:84%
This part of the model
is what we call the fixed

00:13:41.150 --> 00:13:44.420 align:middle line:90%
part, the fixed variables.

00:13:44.420 --> 00:13:48.410 align:middle line:84%
But the ones that we are going
to include in this section

00:13:48.410 --> 00:13:51.500 align:middle line:84%
are the random variables, which
are the ones that we are not

00:13:51.500 --> 00:13:54.050 align:middle line:84%
particularly interested
in understanding,

00:13:54.050 --> 00:13:58.490 align:middle line:84%
but we want to control
so they don't add noise

00:13:58.490 --> 00:14:00.060 align:middle line:90%
into our results.

00:14:00.060 --> 00:14:02.360 align:middle line:84%
So in this case, the
random one is the block,

00:14:02.360 --> 00:14:06.620 align:middle line:84%
which, based on the explanation
of the linear mixed models,

00:14:06.620 --> 00:14:11.520 align:middle line:84%
are the different tables, the
different blocks, the data.

00:14:11.520 --> 00:14:13.290 align:middle line:84%
And here, I added
something new that

00:14:13.290 --> 00:14:15.690 align:middle line:84%
could be used in
every model, which is

00:14:15.690 --> 00:14:18.510 align:middle line:90%
how the model faces the N/As.

00:14:18.510 --> 00:14:23.460 align:middle line:84%
The N/As are empty values where
R doesn't have information.

00:14:23.460 --> 00:14:26.020 align:middle line:84%
It's like a hole
in the database.

00:14:26.020 --> 00:14:30.040 align:middle line:84%
So what happens when R
faces a hole in the data?

00:14:30.040 --> 00:14:33.210 align:middle line:84%
In this case, I'm just
saying just omit that data

00:14:33.210 --> 00:14:35.830 align:middle line:90%
and just keep going.

00:14:35.830 --> 00:14:39.840 align:middle line:84%
You could do an N/A
omit or N/A fail, so

00:14:39.840 --> 00:14:43.590 align:middle line:84%
if you want the code to
fail if it encounters

00:14:43.590 --> 00:14:46.960 align:middle line:84%
an N/A. In this case,
I'm just omitting that,

00:14:46.960 --> 00:14:49.920 align:middle line:84%
so just keep going
and give me a result.

00:14:49.920 --> 00:14:56.100 align:middle line:84%
I'm just going to run that and
see how the residuals look like.

00:14:56.100 --> 00:14:58.630 align:middle line:90%


00:14:58.630 --> 00:15:02.100 align:middle line:84%
Again, you can change the
number of bars right here.

00:15:02.100 --> 00:15:09.055 align:middle line:84%
And I'm going to see what's
the result of the model.

00:15:09.055 --> 00:15:11.920 align:middle line:90%


00:15:11.920 --> 00:15:16.690 align:middle line:84%
In this case, this
package doesn't offer us

00:15:16.690 --> 00:15:19.510 align:middle line:84%
the symbols next to
the variables to see

00:15:19.510 --> 00:15:21.350 align:middle line:90%
if they are significant or not.

00:15:21.350 --> 00:15:25.000 align:middle line:84%
But we can still
read the p-value.

00:15:25.000 --> 00:15:28.480 align:middle line:84%
But it also gives us the
value of the intercept.

00:15:28.480 --> 00:15:32.440 align:middle line:84%
In this case, we have
more significant results

00:15:32.440 --> 00:15:36.040 align:middle line:84%
because of the controlling
of the noise in the blocks.

00:15:36.040 --> 00:15:38.740 align:middle line:84%
So controlling that
part of the variability

00:15:38.740 --> 00:15:43.270 align:middle line:84%
allows us to better focus on
the effect of the fertilization.

00:15:43.270 --> 00:15:47.410 align:middle line:84%
Here, we would see that
fertilization with nitrogen

00:15:47.410 --> 00:15:49.840 align:middle line:84%
is significantly
affecting our results.

00:15:49.840 --> 00:15:53.650 align:middle line:90%
It is increasing the yield by 5.

00:15:53.650 --> 00:15:58.150 align:middle line:84%
And also, potassium
is significantly

00:15:58.150 --> 00:16:01.390 align:middle line:84%
affecting our yield
production, but, in this case,

00:16:01.390 --> 00:16:03.295 align:middle line:90%
is reducing the yield.

00:16:03.295 --> 00:16:08.310 align:middle line:90%


00:16:08.310 --> 00:16:12.360 align:middle line:84%
Also, what we can do is again
to store this information

00:16:12.360 --> 00:16:13.470 align:middle line:90%
into an object.

00:16:13.470 --> 00:16:19.740 align:middle line:84%
Just I named it A. You consult
whatever is inside the summary.

00:16:19.740 --> 00:16:21.840 align:middle line:84%
In this case, I want
to see the information

00:16:21.840 --> 00:16:25.930 align:middle line:84%
about the fixed variables,
which are these ones here.

00:16:25.930 --> 00:16:29.100 align:middle line:84%
And then I can also save
this information into a file,

00:16:29.100 --> 00:16:30.960 align:middle line:90%
in case I want.

00:16:30.960 --> 00:16:34.830 align:middle line:84%
Just type Save and the
object you want to save,

00:16:34.830 --> 00:16:38.310 align:middle line:84%
comma, and where do
you want to store it.

00:16:38.310 --> 00:16:43.960 align:middle line:84%
Here, I'm just going to use the
R format that I told you about.

00:16:43.960 --> 00:16:47.910 align:middle line:84%
But if I wanted to store
it, let's say in CSV,

00:16:47.910 --> 00:16:54.780 align:middle line:84%
just write CSV, again the
object you want to store,

00:16:54.780 --> 00:17:00.920 align:middle line:84%
and the route where you want
to put it in your computer.

00:17:00.920 --> 00:17:05.000 align:middle line:90%